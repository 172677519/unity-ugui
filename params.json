{"name":"Evaluation of the Unity 4.6 New UI System","tagline":"","body":"Unity 4.6 新UI系统(uGUI)评估\r\n==========\r\n\r\n执行效率 控件类型 渲染原理\r\n\r\n引言\r\n=========\r\nUnity终于在即将到来的**4.6**版本内集成了**所见即所得**的UI解决方案。事实上从近几个版本开始，Unity就在为这套系统做技术扩展，以保证最终能实现较理想的UI系统。本文试图通过初步的介绍和试用，来评估这套UI系统好不好用，适合用在什么项目。此外，我谨以ex2D v2.0联名作者的视角，代表小部分插件作者做出评价，探讨将来第三方UI插件的生存之道。为论述方便，下文将这套New UI System简称为**uGUI**，并且以**X-UI**指代现有第三方UI插件。\r\n\r\nRect Transform\r\n=========\r\n![Rect Transform](https://raw.githubusercontent.com/jaredoc/unity-ugui/master/img/RectTransform.png)\r\n\r\nRect Transform是uGUI相比X-UI最显著的区别[注1]。当你为Empty GameObject加入一个UI Component时，Transform会自动转换为Rect Transform。Rect Transform尽量整合了X-UI常见的**anchor**(相对父物体的锚点), **pivot**(中点), **stretch**(拉伸)等属性。\r\n\r\n值得一提的是，这里的**anchor**是Rect而非Vector2，因为它不仅用于偏移，而且用于缩放。点击Rect Transform上的准心图标，还能在弹出的**Anchor Presets**面板中对其进行快速设置。这个面板不是很直观，理解的关键在于把它看成一张表，上面四个图标用于设置列，左边四个图标用于设置行，也可以直接点击里面的16个图标同时设置行和列。强大的地方是，按住**shift**时能同时设置**pivot**，这时能发现控件虽然不动但position已经在改变。如果按住**alt**，则设置anchor的同时设置**position**。如果shift和alt同时按住，那么你就能同时设置anchor, pivot和position。这个操作方式比起X-UI，真的高明很多，对多分辨率适配很有帮助。\r\n\r\n![Anchor Presets](https://raw.githubusercontent.com/jaredoc/unity-ugui/master/img/AnchorPresets.png)\r\n\r\n控件\r\n=========\r\n![UI Component](https://raw.githubusercontent.com/jaredoc/unity-ugui/master/img/UiComponent.png)\r\n\r\nUnity自带了以下控件：\r\n- Image (用于显示Sprite)\r\n- Text\r\n- Raw Image (用于显示Texture)\r\n- Image Mask (用于clipping)\r\n- Rect Mask (用于clipping)\r\n- Button\r\n- Input Field\r\n- Scrollbar\r\n- Scroll Rect\r\n- Slider\r\n- Toggle\r\n- Toggle Group\r\n- Selectable\r\n\r\nUnity的控件是通过组合的形式进行封装的，也就是说当你创建一个Button，你实际上得到了两个GameObject，一个用于绘制按钮本身，一个用于绘制按钮上的文本。这样的设计比X-UI更贴近UI的发展趋势，但容易误操作，用户想修改Button时，很容易修改到Label。\r\n\r\n##\r\n![Event Component](https://raw.githubusercontent.com/jaredoc/unity-ugui/master/img/EventComponent.png)\r\n\r\n总结，有待改进的地方\r\n=========\r\n- 用户想修改Button时，很容易修改到Label。\r\n- Anchor Presets面板还不够直观。\r\n\r\n\r\n附注\r\n=========\r\n1. 我们在其它平台上开发类Entity-Component框架时，就讨论过Unity为什么不对transform做特殊处理，以避免插件作者手工缓存transform来优化query transform引起的开销，甚至是将transform统一整合进GameObject。原因是现在的transform是3D的，将来完全可能推出2D Transform。所以Unity之前的版本里，这一层设计看似冗余，但是有原因的。\r\n2. Unity的部分UI模块以包的形式提供，位于程序目录下的*Editor\\Data\\UnityExtensions\\Unity\\GUISystem\\4.6.0*，Unity提供了两个运行时版本的DLL，分别用于创作和发布。区别主要是发布版不含一些Editor中才用得到的代码。由于DLL没办法通过预编译符号来进行条件编译，因此Unity使用这种方式进行权衡，用户发布时无需手工切换DLL版本，满足了闭源，又兼顾了执行效率。~~这样就甩开了第三方插件几条街，很多插件在这个问题上不是牺牲性能就是无奈开源。~~\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}